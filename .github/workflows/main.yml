name: Main

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
    if: ${{ !startsWith(github.event.head_commit.message, '[skip ci]') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: Gradle wrapper validation
        uses: gradle/wrapper-validation-action@v1

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Write key
        run: |
          echo buildWithGitSuffix=true >> local.properties
          echo storePassword=password >> local.properties
          echo keyAlias=alias >> local.properties
          echo keyPassword=password >> local.properties
          echo fileDir=`pwd`/key.jks >> local.properties
          keytool -genkey -dname "cn=A, ou=D, o=G, l=P, st=M, c=I" -keystore key.jks -storepass password -alias alias -keyalg RSA -keysize 4096 -validity 10000
          
      - name: Cache gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Gradle prebuild
        run: |
          echo 'org.gradle.jvmargs=-Xmx2048m' >> gradle.properties
          ./gradlew prebuild
          
      - name: Build release
        id: buildRelease
        run: |
          ./gradlew :app:buildRelease
          echo "releaseName=$(ls app/build/apk/release/HMA*-release.apk | awk -F '(/|.apk)' '{print $5}')" >> $GITHUB_OUTPUT
          
      - name: Build debug
        id: buildDebug
        run: |
          ./gradlew :app:buildDebug
          echo "debugName=$(ls app/build/apk/debug/HMA*-debug.apk | awk -F '(/|.apk)' '{print $5}')" >> $GITHUB_OUTPUT
          
      - name: Upload release
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.buildRelease.outputs.releaseName }}
          path: "app/build/apk/release/HMA*-release.apk"

      - name: Upload debug
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.buildDebug.outputs.debugName }}
          path: "app/build/apk/debug/HMA*-debug.apk"

      - name: Upload mappings
        uses: actions/upload-artifact@v3
        with:
          name: mappings
          path: "app/build/outputs/mapping/release"